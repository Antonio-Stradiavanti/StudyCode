#include<iostream>
using namespace std;

class Base{
  // private (по-умолчанию)
public:
  //static int y;
  int x, y;
  // Этот член класса глобален для всех объектов
  // Объявление
  // Обычный метод может получить доступ как к статическим, так и к не статическим членам класса.
  // Этот метод может получить доступ только к статическим членам класса.
  //Base(int fx, int fy) { x = fx; y = fy; }
  virtual void PrintCoords(){ cout << x << " " << y << endl; };
};
// Нужно выделить память под глобальный член класса :
// Определение члена класса y

class T1{
  // Объявил объект другого класса внутри этого класса
  Base* b = new Base;
public:
  void test(){
    b->x = 10;
    b->y = 20;
    this->b->PrintCoords();
  }
};

//int Base::y = 10;
int main()
{
  
  // Ф-ция же ничего не возвращает, как я ее хотел добавить в стандартный поток вывода ? 
  T1 Tst; Tst.test();
  // Метод принадлежит классу, а не конкретному объекту.
  return 0;
}
* TODO События

- Событие :: Связь между делегатом и обработчиком события.
  + Cобытия объявляют либо как свойства классов имеющие тип указатель на делегат. Для объявленного события неявно определяются методы ~add, remove, raise~, сигнатура и тип возвращаемого значения которых соответствует делегату.

  + Список параметров и тип возвращаемого значения обработчика объявленного события должны соответствовать _делегату_, указанному при объявлении события.
    * Делегат может иметь несколько связанных с ним обработчиков.

#+BEGIN_SRC cpp
   event тип_делегата^ имя_события;
#+END_SRC

Операторы += и -= добавляют и удаляют соответственно обработчик события.

 - [ ] Как передавать в события один или несколько параметров ?



* TODO Делегаты

- Делегат :: Тип, который представляет указатель на ф-цию.
  + Позволяют передать методы в качестве аргументов других методов. Реализуются через указатели на ф-ции.

  + Указатель на ф-цию указывает на любую ф-цию с указанным типом возвращаемого значения и указанным списком параметров => может быть привязан к нескольким методам в управляемом классе.


* TODO Что такое обработчик события ?

- Обработчик события :: Просто метод, который выполняется при возникновении события.
  + Для того чтобы метод обработал определенное событие его сигнатура должна совпадать с сигнатурой делегата, указанного при объявлении события.

- [ ] Как отслеживать наступление события



* TODO Ключ слова ref & value

  + ~ref class {};~ используется для объявления класса, время жизни экземпляров которого управляется средой ~CLR~ => экземпляры такого класса _всегда хранятся в куче_.
    * Если создать экземляр управляемого класса без использования указателей, то среда создаст его экземпляр в куче, но время жизни этого экземпляра будет ограничено блоком, в котором он объявлен.

    * Чтобы временем жизни экземляра управляемого класса управлял сборщик под него нужно явно выделить память с использованием оператора ~gcnew~, который возвращает  указатель на управляемый объект (обозначения используется символ ~^~) (на 1-й байт памяти, выделенной в управляемой сборщиком мусора куче)
      - В С++/CLI существуют 2 разные области динамической памяти, над одной из них определена сборка мусора, над другой нет.

  + ~value class {};~ используется для объявления класса, экземпляры которого хранятся в стеке, эквивалентно объявлению структуры в C#.
    * Экземпляр такого класса можно создать в куче только с использованием указателя на ~Object~

- В C++/CLI для вывода в консоль как в С# используются статические методы класса ~Console~

* TODO Управляемые классы

Объект типа ~System.IO.TextReader~ представляет клавиатуру, а объект типа ~System.IO.TextWriter~ представляет окно консоли.

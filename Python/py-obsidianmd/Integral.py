import math

def f(x):
    return (math.cos(math.log(x)))/(x)

a = 1; b = math.e ** (math.pi/2); n = 1000; fflag = 0
# Разобьем основание криволинейной трапеции (отрезок a, b) на n равных частей, отрезков длины h:
def frectangle(a, b, n):
    h = (b-a) / n
    ord = [0 for i in range(n)]
    # Формула средних прямоугольников
    for i in range(n):
        # длина каждого из отрезков, на которые мы разбиваем основание трапеции - одинакова ⇒ середина i го отрезка будет равна a += h/2
        a += h/2
        # Вычислим значение ф-ции от середины i-го отрезка, прибавим к накопительной сумме: 
        ord[i] = h*f(a)
        # Дойдем до конца i го отрезка
        a += h/2
    print("Результат1: ", sum(ord), end="\n")
# Формула трапеций
# Площадь криволинейной трапеции численно равна сумме площадей обычных трапеций с основаниями y_(i), y_(i+1)
# y0, y1, ..., yn -> значения ф-ции от x0, x1, ..., 
# b = xn
def ftrapezoideal(a, b, n):
    h = (b-a) / n
    x = [0 for i in range(n)]
    y = [0 for i in range(n)] 
    x[0] = a
    y[0] = f(x[0])
    # площади каждой из обычных трапеций будем хранить: 
    S = [0 for i in range(n)]
    # Нахожу основания трапеции и площадь каждой из трапеций
    for i in range(1, n):
        x[i] = x[i-1] + h
        y[i] = f(x[i])
        S[i] = (h*(y[i-1] + y[i]))/2
    print("Результат2: ", sum(S), end="\n")
# Формула Симпсона
def fSimpson(a, b, n):
    h = 0; coef = 0; sum = 0
    # h -> Высота параболической трапеции 
    h = (b - a) / (2*n)
    # Вычисляю значение ф-ции от пределов интегрирования
    sum = f(b) + f(a)
    # 
    for i in range(1, 2*n):
        # для нечетных ординат коэффициент будет 4, для четных -> 2
        coef = 2 + 2 * (i % 2)
        sum += coef * f(a + i * h)
    sum *= h / 3
    print("Результат3: ", sum, end='\n')

isexit = "N"
# Меню:
while (isexit != 'Y'):
    n = int(input("Введите количество отрезков, на которые нужно поделить основание криволинейной трапеции:\n"))
    fflag = int(input("Выберите номер метода приближенного вычисления интегралов: [1 -> Метод средних прямоугольников, 2 -> метод трапеций, 3 -> метод Симпсона]\n")) 
    if (fflag == 1):
        frectangle(a, b, n)
    elif (fflag == 2):
        ftrapezoideal(a, b, n)
    elif (fflag == 3):
        fSimpson(a, b, n)
    else: 
        print("Введен некоректный номер метода")
    isexit = input("Хотите завершить выполнение программы? [Y/N]\n")
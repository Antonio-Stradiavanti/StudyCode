* Практика

- [ ] Сформировать матрицу случайных величин любого типа.

- [ ] Разобраться с генератором случ чисел.
  ? Можно ли сгенерировать случайное вещественное число

- [ ] Спроектировать классы.

Для того чтобы реализовать универсальный метод, который позовляет использовать символ как левым, так и правым операндом перегружаемого для матрицы оператора + нужно исп. друж ф-ции.

* Спецификация
- Цель работы :: Изучить механизм параметрического полиморфизма на основе создания и использования параметризованных классов.

- Задание кафедры :: Реализовать на С++ параметризованный класс "Матрица"
  + Типы элементов матрицы : множество объектов определенного типа, массив символов.
  + Необходимые операции : сложение матриц, разность матриц, сложение матрицы с символом (добавить символ к каждому из элементов), сложение символа с матрицей (та же операция, только порядок опреандов другой).
    * Операции осуществляются одной строкой.


* Вопросы
** TODO Сбор информации [0/5] [0%]

- [ ] Почитать главу Страуструпа про операторы преобразования типов (668), про шаблоны (730), ссылки (650), про область видимости (стр. 313) и пространства имен.
- [ ] Прочитать у Лафоре +про дружественные классы и методы+, про статические методы (сначала запиши свое представление по этому понятию) (495)
- [ ] Почитать про итераторы, +auto+, семантику перемещения, стандарты С++, +цикл for, основанный на диапазоне+ у Юзутиса.
- [ ] Прочитать у Кернигана про стек фреймы и вызов ф-ций.

** Терминология

- Параметрический полиморфизм :: Механизм, который позволяет использовать типы в качестве параметров ф-ции или класса.

** ? Зачем нужны параметризованные классы
** ? Какой из механизмов ООП реализуется с использованием параметризованных классов
** ? Что такое шаблон класса
** ? Во сколько раз сокращается машинный код программы при использовании параметризованных классов
** ? Какого вида могут быть параметры при задании шаблона класса
** ? Контейнеры
- Контейнер последовательности :: упорядоченная коллекция, в которой каждый элемент занимает определенную позицию, которая не зависит от значения элемента.
  + В STL : array, vector, deaue, list, forward_list.

* Сбор информации
- [ ] Прочитать все про шаблоны у Страуструпа
* Спецификация
- Цель работы :: Изучить механизм параметрического полиморфизма на основе создания и использования параметризованных классов.

- Задание кафедры :: Реализовать на С++ параметризованный класс "Матрица"
  + Типы элементов матрицы : множество объектов определенного типа, массив символов.
  + Необходимые операции : сложение матриц, разность матриц, сложение матрицы с символом, сложение символа с матрицей.
    * Операции осуществляются одной строкой.

* Терминология

- Параметрический полиморфизм :: Механизм, который позволяет использовать типы в качестве параметров ф-ции или класса.

- vector :: Общий динамический массив элементов типа Т. Страуструп рекомендует использовать его по умолчанию.

* Ход работы

- [ ] Сформировать матрицу случайных величин любого типа.

** ? Как вставить в вектор объект пользовательского класса.

- reserve() ::

- push_back() :: Передает элемент в контейнер по ссылке и увеличивает размер контейреа на 1.
  + Элемент должен быть предварительно создан.

- emplace_back() :: Создает объект в слоте контейнере

* Контрольные вопросы

** ? Зачем нужны параметризованные классы
** ? Какой из механизмов ООП реализуется с использованием параметризованных классов
** ? Что такое шаблон класса
** ? Во сколько раз сокращается машинный код программы при использовании параметризованных классов
** ? Какого вида могут быть параметры при задании шаблона класса
** ? Контейнеры
- Контейнер последовательности :: упорядоченная коллекция, в которой каждый элемент занимает определенную позицию, которая не зависит от значения элемента.
  + В STL : array, vector, deaue, list, forward_list.

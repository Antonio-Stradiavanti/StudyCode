#+TITLE: Мощный инструмент, нечто большее чем просто язык разметки.
#+DESCRIPTION:
* Примечания
[[https://youtu.be/34zODp_lhqg][Введение в org-mode]]

- SPC-i-s :: Вставить фрагмент.

* ? Что такое org-mode
Документация -> org-info.

- Инструмент для ведения коспектов и управления задачами.
  + Представление заметки в форме иерархической структуры - наилучший способ хранения зафиксированных мыслей.
    - Обзор этой структуры достигается путем скрытия больших частей заметки.

Списками помечаю дополнения главной мысли.

* Терминология

- outline :: Иерархическая структура документа
- Дерево :: Заголовок и все что под ним.

- Списки :: Используются для дополнительной *структуризации* информации внутри дерева.
  * Структура :: Множество элементов и множество связей между ними, нужна чтобы представить организацию чего-либо.
  + Неупорядоченные списки начинаются с символов -, + или с *.


* Иерархическая структура заметки

Одна пустая строка после содержимого поддерева рассматривается как его часть и будет скрыта при нажатии клавиши ~tab~ вторая пустая строка таковой не является.

** Создание иерархической структуры

- C-RET :: Создать новый заголовок (поддерево) ниже текущего, на том же уровне.
- C-S-RET :: Создать новый заголовок выше текущего, на то же уровне.

- M-RET (option-RET) :: Создать новый заголовок на том же уровне что и текущее поддерево (если курсор находится не на элементе списка) иначе - элемент списка на том же уровне.

- C-c C-* :: Превратить весь список в заголовок, внутри текущего поддерева.
  + C-c * :: Превратить элемент списка в заголовок.

- C-c - :: Превратить текст в список.

- :: :: Отделяет термин от описания, описание рассматривается как элемент списка.

- (evil) g-k/j :: Перейти к предыдущему/следующему заголовку на том же уровне.

** Управление иерархической структурой

- S-TAB :: Свернуть все заговки документа.
- TAB :: Свернуть/развернуть дерево/поддерево.
- S-UP/DOWN :: Переместить курсор на следующий элемент списка.

- M-h/l (option-left/right) :: Переместить элемент на уровень выше/ниже (вправо/влево).
  + S-M-h/l (option-S-left/right) :: Переместить поддерево на уровень выше ниже (вправо/влево).
- M-k/j (option-up/down) :: Переместить дерево выше/ниже
  + S-M-k/j (option-S-up/down) :: Переместить заголовок дерева/блок текста выше/ниже.

- C-c @ :: Выделить весь текст в поддереве.
- C-c C-x M-w (option-w) :: Скопировать поддерево.

- C-c C-n :: Переместить курсор на следующий заголовок
- C-c C-p :: Обратное
- C-c C-f/b :: Переместить курсор на следующий/предыдущий заголовок на том же уровне поддерева.

- C-x n s :: Сфоркусироваться на текущем поддереве (как outliner в Obsidian).
- C-x n w :: Обратное

** TODO Свойства [0/2] [0%]

- [ ] Разобраться со свойствами
- [ ] Разобраться с table-view

*** Аналогия Obsidian org

| Функционал              | org-mode            | Obsidian                   |
|-------------------------+---------------------+----------------------------|
| Поле метаданных         | Свойство (property) | dataview-field, yaml-field |
| Табличное представление | Column View         | Dataview table view        |
*** Свойства
:PROPERTIES:
:SUMMARY:  Тест
:END:

**** Описание

- Свойство :: пара "ключ-значение", связанно с заголовком или со всем буфером.

Значения свойств, связанных с разными записями можно просмотреть в режиме column-view.

- Свойства, относящиеся к заголовку записиваются внутри блока, ограниченного ключ. словами ~:PROPERTIES:~ И ~:END:~.
  + Блок свойств должен быть расположен прямо под заголовком или его строкой планирования (если она есть).
  + Каждое свойство занимает одну строку, ключ заключается в двоеточия.
  + Суффикс ~_ALL~ используется чтобы описать множество допустимых значений свойства.
  + Чтобы добавить значение к сущ. ключу нужно добавить ~+~ его имени.

- Свойства, относящиеся к буферу должны быть указанны в верхней части буфера перед первым заголовком.
**** Управление блоком свойств
- C-c C-c :: Меню управления свойствами.
- C-c C-c d :: Удалить ствойство из блока свойств заголовка.
* Управление задачами и расписание
** Управление списком задач

- Конструкция [m/n] в заголовке списка задач показывает число выполненных и оставшихся задач.

- SPC-m-t/S-Стрелка_вправо :: Изменить состояние списка задач
- S-Стрелка_влево :: Превратить список задач в обычный заголовок.
** TODO Управление задачами [0/1] [0%]

- [ ] Узнать как быстро изменять временные отметки

- SPC-m-s :: Выделить время задаче
- С-с C-c :: Изменить состояние задачи

Для того чтобы упростить планирование используются ключевые слова : { DEADLINE, SCHEDULED }

** План действий на день (agenda)


- SPC-n-a :: Открыть org-agenda
- q :: Закрыть org-agenda

* Внутренние и внешние ссылки
- Внешнаяя сслыка заключается в ~[[Ссылка][Описание]]~
* Таблицы

- C-c C-c :: Перестроить таблицу без перемещения курсора.

- SPC m b - :: Отделить заговоловок талицы от содержимого.

** Управление строками и стоблцами :

- TAB :: Перейти на сл. столбец текущей строки.
- S-TAB :: Вернуться к пред. столбцу.
- S-RET :: Скопировать и вставить содержимое стобца в сл. строку того же столбца.

- M-S-l :: Вставить новый столбец перед текущим столбцом.
- M-S-h :: Удалить текущий столбец.

- M-S-j :: Вставить строку в таблицу выше текущей строки.
- M-S-k :: Удалить текущую строку таблицы.

- M-k/j :: Пеместить строку таблицы вверх/вниз
- M-h/l :: Пеместить столбец таблицы влево/вправо.

* Блоки исходного кода

Блок исходного кода ограничивается инструкциями : ~#+BEGIN_SRC~ И ~#+END_SRC~

В org-mode можно компилировать и исполнять код в блоке кода.

Для редактирования и форматирования блока исходного кода org-mode использует соответствующий major-mode.

Блок исходного кода можно записать в один или несколько исходных файлов.

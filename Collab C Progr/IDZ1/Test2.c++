#include <iostream>
#include <cmath>
#include <fstream>
#include <vector>
#include <cstdlib>

using namespace std;

typedef struct
{
    
} Store;

int main()
{
    ofstream file;
    vector<string> М = {"прямоугольник", "квадрат", "круг", "прямая", "треугольник"};
    // Ур-е квадрата | х - а | + | у - b | ≤ d / 2   a- длинна одной стороны, b-длинна другой стороны, d-длинна диагонали 

    // Даны точки : нужно по этим точкам построить прямые, а по длине прямых фигуру.
 
    // Ур-е окружности (x^2 + x_0) + (y^2 + y_0) = R^2 -> задается радиусом             для круга x,y, R


    // Ур-е прямой (x-x1)/(x2-x1) = (y-y1)/(y2-y1)

    // Ур-е треугольника по трем прямым

    file.open("Test.txt");
    for(int i = 0; i<30;i++)
    {
        file << "Написать программу для проверки попадания введенных координат (x, y) исследуемой точки в область" << "<сгенерированная область>" << "<Сгенерированная область> создается посредством пересечения/объединения/разности пар/троек фигур: прямоугольник, квадрат, круг, прямые, треугольник и задается так: каждая сторона - координатами вершин, круг/полукруг - радиусом." <<  endl;
    }
    file.close();
    string str;
    cin >> str;
    cout << str << endl;
    return 0;
}
/*

Вариант 2, 7, 12, 17

Разработка программы для генерации заданий по составлению программ с условиями
Разработать программу, которая будет генерировать условия и тестовые данные задач по разработке программ, реализующих условные алгоритмы. Условие задачи
должно содержать следующий шаблон: написать программу для проверки попадания введенных координат (x, y) исследуемой точки в область <сгенерированная область>.
<Сгенерированная область> создается посредством пересечения/объединения/разности пар/троек фигур: прямоугольник, квадрат, круг, прямые, треугольник
и задается так: каждая сторона – координатами вершин, круг/полукруг - радиусом. 
*/

/*
Вариант 5, 10, 15

Разработка программы для генерации заданий по составлению программ обработки структур, разработать программу, которая будет генерировать условия и тестовые данные задач по 
разработке программ, обрабатывающих массивы структур. 

Операции над массивом : добавление одного или нескольких элементов, удаление элементов одного или нескольких элементов, упорядочивание элементов, поиск элемента, изменение размера массива структур.

Поля: 
    Поле 1: 
    {
        int 
        char
    } 
    Поле 2:
---
Условие задачи
должно содержать следующий шаблон: написать программу для заполнения и выполнения <операций> над массивом, каждый элемент которого представлен структурой, содержащей следующие поля: <поле1>, <поле2>.

Для генерации массивов структур для каждого варианта следует вначале создать общий массив, элементы которого представлены структурой с большим количеством полей. Это может быть массив информации о студентах: ФИО, №зачетной книжки, №студенческого билета, адрес, дата окончания школы, средний балл аттестата, текущий рейтинг по дисциплине1, текущий рейтинг по дисциплине2 и т.д. 
---
- Организовать поля структур по категориям и записать в информационный массив.

Из общего массива
для каждого задания случайно выбираются 2-3 поля. 

Для меня : Операции, которые можно выполнить над элементами массивами: минимальное/максимальное по полю, перестановка двух или более элементов по заданным индексам (индексы генерируются случайно), установка значения по заданному индексу, поиск значения с заданным полем или по диапазону и другие. Все поля должны иметь разные типы.

Результатом работы программы должны быть: файлы с условиями задач; файлы с вариантами входных и выходных тестовых данных (архив из не менее 30 тестов для каждой задачи). Форматы выходных файлов, изменения в исходном задании следует уточнять с преподавателем в процессе выполнения работы. 
*/

/*
Для каждого варианта

Результатом работы программы должны быть: файлы с условиями задач; файлы с вариантами входных и выходных тестовых данных (архив из не менее 30 тестов для каждой задачи). Форматы выходных файлов, изменения в исходном задании следует уточнять с преподавателем в процессе выполнения работы. 
*/
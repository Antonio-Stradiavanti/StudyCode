// –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–æ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

// –î–µ–∫–∞—Ä—Ç–æ–≤–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ 2—Ö –≥—Ä–∞—Ñ–æ–≤.

// –û–±—Ö–æ–¥ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤ –≥–ª—É–±–∏–Ω—É.

#include <iostream>
using namespace std;

/* 
  –ï—Å—Ç—å 2 —Å–ø–æ—Å–æ–±–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ-—Ü–∏–∏ —á–ª–µ–Ω–∞. 
  1. –í–Ω—É—Ç—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞
  2. –í–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞, —Ñ-—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–±—ä—è–ª–≤–ª–µ–Ω–∞ –≤ –∫–ª–∞—Å—Å–µ, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –∏–º–µ–Ω.

  private -> –∫–ª—é—á —Å–ª–æ–≤–æ -> –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–∞ : –ß–ª–µ–Ω—ã –∫–ª–∞—Å—Å–∞, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –∫–∞–∫ private , –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—è–º–∏-—á–ª–µ–Ω–∞–º–∏ –∫–ª–∞—Å—Å–∞ –∏–ª–∏ –∫–ª–∞—Å—Å–∞–º–∏-–¥—Ä—É–∑—å—è–º–∏.

  protected -> –∫–ª—é—á —Å–ª–æ–≤–æ -> –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–∞ : –ß–ª–µ–Ω—ã –∫–ª–∞—Å—Å–∞, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –∫–∞–∫ protected, –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤–Ω–µ –∫–ª–∞—Å—Å–∞, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –ø–æ–¥–∫–ª–∞—Å—Å–∞–º–∏ –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏–ª–∏ –µ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–º–∏.
  
  public -> –∫–ª—é—á —Å–ª–æ–≤–æ -> –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–∞ : –ß–ª–µ–Ω—ã –∫–ª–∞—Å—Å–∞, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –∫–∞–∫ public, –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π (–≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã).

*/
// –°—É–ø–µ—Ä–∫–ª–∞—Å—Å!!! üòé
class C 
{
public: 
  int a, b;
  int sum(int a, int b);
friend class C1;
private:
  int fact(int n)
  {
    int r = 1, i;
    for (i = 2; i <= n; i++)
      r*=i;
    return r;
  }
};

// derive -> –ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å.
// inheritance -> –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤.

/* 
  –ù–æ–≤—ã–π –∫–ª–∞—Å—Å —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª–∞—Å—Å–∞.
  
  <access specifier> -> —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏–±–æ public, –ª–∏–±–æ private, –ª–∏–±–æ protected.

  private –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ï—Å–ª–∏ –Ω–∞—Å–ª–µ–¥—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —Ç–æ —á–ª–µ–Ω—ã —Å—É–ø–µ—Ä–∫–ª–∞—Å—Å–∞, —Å–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –¥–æ—Å—Ç—É–ø–∞ public —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è private –¥–ª—è –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∞. 

  => –æ—Ç–∫—Ä—ã—Ç—ã–µ (public) —á–ª–µ–Ω—ã —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ (public), –∑–∞—â–∏—â–µ–Ω–Ω—ã–º–∏ (protected) –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç—ã–º–∏ (private) –¥–ª—è –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–∞.

  –†–µ–∂–∏–º—ã –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:

  –¢–∏–ø—ã –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:

*/

// Cd -> –î–æ—á–µ—Ä–Ω–∏–π –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–π –∫–ª–∞—Å—Å –∫–ª–∞—Å—Å–∞ –°
// class  <derived_class_name> : <access-specifier> <base_class_name>
class Cd : protected C
{
public: 
  void summ(Cd& T, int a, int b)
  {
    cout << T.sum(a, b) << endl;
  }
};
class Cdd : public Cd
{
public:
  void summm(Cdd& T, int a, int b)
  {
    cout << T.sum(a, b) << endl;
  }
};

// –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω
int C::sum(int a, int b)
{
  return a + b;
}

// –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –º–∞–∫—Ä–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞.
template <typename T> T mmax(T x, T y)
{
  return (x > y) ? x : y;
}

int main()
{
  C T; Cd T1; Cdd T2;
  T2.summm(T2, 12, 1);
  cout << mmax<double>(2.3, 3.14) << "\n" << mmax<char>('Z', 'D') << endl;
  return 0;
}